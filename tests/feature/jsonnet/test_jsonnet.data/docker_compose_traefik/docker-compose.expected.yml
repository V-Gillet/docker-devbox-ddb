version: '3.7'
services:
  db:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/db
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/db
    environment:
      POSTGRES_PASSWORD: biometrie
      POSTGRES_USER: biometrie
    image: gfiorleans.azurecr.io/gli-biometrie/db
    init: true
    ports:
      - published: 16032
        target: 5432
    restart: "no"
    user: 1000:1000
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      - /home/toilal/projects/GLI-APIBiometrie:/workdir:rw
  db-test:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/db
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/db
    environment:
      POSTGRES_PASSWORD: biometrie
      POSTGRES_USER: biometrie
    image: gfiorleans.azurecr.io/gli-biometrie/db
    init: true
    ports:
      - published: 16033
        target: 5432
    restart: "no"
    user: 1000:1000
    volumes:
      - db-test-data:/var/lib/postgresql/data:rw
      - /home/toilal/projects/GLI-APIBiometrie:/workdir:rw
  keycloak:
    command:
      - -b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/keycloak/realm-export.json
    depends_on:
      - keycloak-db
    environment:
      DB_ADDR: keycloak-db
      DB_DATABASE: biometrie
      DB_PASSWORD: biometrie
      DB_USER: biometrie
      DB_VENDOR: postgres
      KEYCLOAK_PASSWORD: biometrie
      KEYCLOAK_USER: biometrie
      PROXY_ADDRESS_FORWARDING: "true"
    image: jboss/keycloak:8.0.1
    init: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.gli-apibiometrie-keycloak-tls.rule: Host(`keycloak.biometrie.test`)
      traefik.http.routers.gli-apibiometrie-keycloak-tls.service: gli-apibiometrie-keycloak
      traefik.http.routers.gli-apibiometrie-keycloak-tls.tls: "true"
      traefik.http.routers.gli-apibiometrie-keycloak.rule: Host(`keycloak.biometrie.test`)
      traefik.http.routers.gli-apibiometrie-keycloak.service: gli-apibiometrie-keycloak
      traefik.http.services.gli-apibiometrie-keycloak.loadbalancer.server.port: '8080'
    links:
      - keycloak-db:postgres
    networks:
      default: {}
      reverse-proxy: {}
    restart: "no"
    volumes:
      - /home/toilal/projects/GLI-APIBiometrie/keycloak:/opt/jboss/keycloak/keycloak:rw
  keycloak-db:
    build:
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/keycloak-db
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/keycloak-db
    environment:
      POSTGRES_DB: biometrie
      POSTGRES_PASSWORD: biometrie
      POSTGRES_USER: biometrie
    image: gfiorleans.azurecr.io/gli-biometrie/keycloak-db
    init: true
    ports:
      - published: 16042
        target: 5432
    restart: "no"
    volumes:
      - /home/toilal/projects/GLI-APIBiometrie/keycloak/init.sql:/docker-entrypoint-initdb.d/init.sql:rw
      - keycloak-db-data:/var/lib/postgresql/data:rw
      - /home/toilal/projects/GLI-APIBiometrie:/workdir:rw
  ldap:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/ldap
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/ldap
    command: --copy-service --loglevel debug
    environment:
      LDAP_ADMIN_PASSWORD: biometrie
      LDAP_DOMAIN: biometrie.test
      LDAP_ORGANISATION: biometrie
    image: gfiorleans.azurecr.io/gli-biometrie/ldap
    init: true
    ports:
      - published: 16089
        target: 389
      - published: 16036
        target: 636
    restart: "no"
  node:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/node
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/node
    image: gfiorleans.azurecr.io/gli-biometrie/node
    init: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.gli-apibiometrie-tls.rule: Host(`biometrie.test`)
      traefik.http.routers.gli-apibiometrie-tls.service: gli-apibiometrie
      traefik.http.routers.gli-apibiometrie-tls.tls: "true"
      traefik.http.routers.gli-apibiometrie.rule: Host(`biometrie.test`)
      traefik.http.routers.gli-apibiometrie.service: gli-apibiometrie
      traefik.http.services.gli-apibiometrie.loadbalancer.server.port: '8080'
    networks:
      default: {}
      reverse-proxy: {}
    restart: "no"
    user: 1000:1000
    volumes:
      - /home/toilal/projects/GLI-APIBiometrie:/app:rw
      - node-cache:/home/node/.cache:rw
      - node-npm-packages:/home/node/.npm-packages:rw
  php:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/php
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/php
    environment:
      PHP_IDE_CONFIG: serverName=biometrie
      XDEBUG_CONFIG: remote_enable=on remote_autostart=off idekey=biometrie remote_host=172.17.0.1
    image: gfiorleans.azurecr.io/gli-biometrie/php
    init: true
    restart: "no"
    user: 1000:1000
    volumes:
      - php-composer-cache:/composer/cache:rw
      - php-composer-vendor:/composer/vendor:rw
      - /home/toilal/projects/GLI-APIBiometrie/.docker/php/conf.d/php-config.ini:/usr/local/etc/php/conf.d/php-config.ini:rw
      - /home/toilal/projects/GLI-APIBiometrie:/var/www/html:rw
  web:
    build:
      cache_from:
        - gfiorleans.azurecr.io/gli-biometrie/web
      context: /home/toilal/projects/GLI-APIBiometrie/.docker/web
    image: gfiorleans.azurecr.io/gli-biometrie/web
    init: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.gli-apibiometrie-api-tls.rule: Host(`api.biometrie.test`)
      traefik.http.routers.gli-apibiometrie-api-tls.service: gli-apibiometrie-api
      traefik.http.routers.gli-apibiometrie-api-tls.tls: "true"
      traefik.http.routers.gli-apibiometrie-api.rule: Host(`api.biometrie.test`)
      traefik.http.routers.gli-apibiometrie-api.service: gli-apibiometrie-api
      traefik.http.services.gli-apibiometrie-api.loadbalancer.server.port: '80'
    networks:
      default: {}
      reverse-proxy: {}
    restart: "no"
    volumes:
      - /home/toilal/projects/GLI-APIBiometrie/.docker/web/nginx.conf:/etc/nginx/conf.d/default.conf:rw
      - /home/toilal/projects/GLI-APIBiometrie:/var/www/html:rw
networks:
  reverse-proxy:
    external: true
    name: reverse-proxy
volumes:
  db-data: {}
  db-test-data: {}
  keycloak-db-data: {}
  node-cache: {}
  node-npm-packages: {}
  php-composer-cache: {}
  php-composer-vendor: {}